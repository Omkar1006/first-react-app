{"ast":null,"code":"var _jsxFileName = \"/home/ovaidya/first_app/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n// let name = 'Omkar'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); //checks if dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode has been Enabled\", 'success');\n      document.title = 'Text Utils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\", 'primary');\n      document.title = 'Text Utils - Light Mode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter your text to Analyse below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/home/ovaidya/first_app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\n\n// let name = 'Omkar'\nfunction App() {\n\n  const [mode, setMode] = useState('light');//checks if dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\nconst showAlert = (message,type) =>{\n\n  setAlert({\n    msg:message,\n    type :type\n\n  })\n\n  setTimeout(() => {\n    setAlert(null)\n  }, 1000);\n}\n\n  const toggleMode = () =>{\n    \n    if(mode === 'light')\n    {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark Mode has been Enabled\",'success')\n      document.title = 'Text Utils - Dark Mode'\n    }\n   else\n    {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode has been Enabled\",'primary')\n      document.title = 'Text Utils - Light Mode'\n    }\n  }\n  return (\n    <>\n   \n\n  <Navbar title = \"TextUtils\" aboutText = \"About\" mode={mode} toggleMode ={toggleMode}/>\n  <div className=\"container my-3\">\n\n\n    <Alert alert = {alert}/>\n{/* <Router>\n    <Routes>\n          <Route path=\"/\" element = {<TextForm  showAlert = {showAlert} heading = \"Enter the Text below to Analyse\"  mode={mode} />}/>\n          <Route path=\"/about\" element = {<About/>}/>\n    </Routes>\n</Router> */}\n\n<TextForm showAlert={showAlert} heading=\"Enter your text to Analyse below\" mode={mode}/>\n\n  </div>\n\n</>\n\n);\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;;AAGtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAI;IAEjCH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAAEA;IAER,CAAC,CAAC;IAEFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAEC,MAAMM,UAAU,GAAGA,CAAA,KAAK;IAEtB,IAAGT,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjDM,QAAQ,CAACI,KAAK,GAAG,wBAAwB;IAC3C,CAAC,MAED;MACEb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClDM,QAAQ,CAACI,KAAK,GAAG,yBAAyB;IAC5C;EACF,CAAC;EACD,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAGFpB,OAAA,CAACJ,MAAM;MAACuB,KAAK,EAAG,WAAW;MAACE,SAAS,EAAG,OAAO;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAGA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtFzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAN,QAAA,gBAG7BpB,OAAA,CAACF,KAAK;QAACS,KAAK,EAAIA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAQ5BzB,OAAA,CAACH,QAAQ;QAACY,SAAS,EAAEA,SAAU;QAACkB,OAAO,EAAC,kCAAkC;QAACtB,IAAI,EAAEA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEhF;EAAA,gBAEL;AAGH;AAACrB,EAAA,CA1DQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}